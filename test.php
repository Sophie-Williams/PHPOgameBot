<?php

require_once __DIR__ . '/vendor/autoload.php';

/** @var \Nette\DI\Container $container */
$container = require_once __DIR__ . '/app/bootstrap.php';
//$hours = 1 + 24/60 + 38/3600;
//$minutes = ($hours - (int) $hours) * 60;
//$seconds = ($minutes - (int) $minutes) * 60;
//$hours = (int) $hours;
//$minutes = (int) $minutes;
//$seconds = (int) $seconds;
//echo "{$hours}:$minutes:$seconds";
//
//$interval = "26min";
//$params = \Nette\Utils\Strings::match($interval, '~((?<weeks>\d{1,2})t)? ?((?<days>\d{1,2})d)? ?((?<hours>\d{1,2})hod)? ?((?<minutes>\d{1,2})min)? ?((?<seconds>\d{1,2})s)?~');
//var_dump($params);
//echo $params['seconds'] ?? 0;

class MyIterator extends ArrayIterator {

	public function addBeforeCurrent($element)
	{
		echo "adding: $element" . PHP_EOL;
		$this->offsetSet($this->key(), $element);
		$this->seek($this->key() - 1);
	}

	public function current()
	{
		echo 'getting current: ' . parent::current() . PHP_EOL;
		return parent::current(); // TODO: Change the autogenerated stub
	}

}

class Queue implements IteratorAggregate {

	private $commands;

	/** @var ArrayIterator */
	private $iterator;

	public function __construct($commands)
	{
		$this->commands = $commands;
	}

	public function addBeforeCurrent($element)
	{
		echo "adding: $element" . PHP_EOL;
		array_splice($this->commands, $this->iterator->key(), 0, [$element - 0.5]);
	}

	public function getIterator()
	{
		$this->iterator = new ArrayIterator($this->commands);
		return $this->iterator;
	}
}

//$array = [1,2,3,4,5,6,7,8,9,10];
//$iterator = new Queue($array);
//foreach ($iterator as $index => $item) {
//	if ($item % 2 == 0) {
//		array_splice( $array, $index, 0, [$item - 0.5] );
//		$iterator->addBeforeCurrent($item - 0.5);
////		var_dump($array);
////		$iterator;
//	}
//	echo $item . PHP_EOL;
//}

//$array = [1,2,3,4,5,6,7,8,9,10];
//while (count($array) > 0) {
//	$item = $array[0];
//	if ($item % 2 == 0) {
//		array_splice( $array, 0, 0, [$item - 0.5] );
//		$item = $array[0];
//	}
//	echo $item . PHP_EOL;
//	array_shift($array);
//}//	echo $item . PHP_EOL;


//var_dump(array_merge([1,2], [3], [4,5]));
//var_dump((new \App\Utils\ArrayCollection([1,2,4,5]))->addBefore(3, 2)->toArray());

//var_dump(\Nette\Utils\Strings::replace('C:\xampp\htdocs\bookStore\app\modules\frontModule\presenters', '~(\\\|\\/)modules(\\\|\\/)[a-z]+Module~'));
//var_dump(\Nette\Utils\Strings::replace('C:\xampp\htdocs\bookStore\app\modules\frontModule\presenters', '~(\\\|\\/)~'));
//var_dump(\Nette\Utils\Strings::replace('C:\xampp\htdocs\bookStore\app\modules\frontModule\presenters', '~(\\\|\\/)modules(\\\|\\/)~'));

///** @var \App\Model\Queue\QueueConsumer $consumer */
//$consumer = $container->getByType(\App\Model\Queue\QueueConsumer::class);
//$consumer->processQueue();

class A {
	public static function create()
	{
		return new static;
	}
}
class B extends A {}
//
//var_dump(B::create());

$time = '20.05.2016 21:54:26';
$carbon = \Carbon\Carbon::instance(new DateTime($time));
echo $carbon;