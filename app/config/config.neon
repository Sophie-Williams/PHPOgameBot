#
# WARNING: it is CRITICAL that this file & directory are NOT accessible directly via a web browser!
# https://nette.org/security-warning
#
parameters:
	acceleration: 3
	cronFile: %wwwDir%/cron.txt
	runningFile: %wwwDir%/running.txt
	queueFile: %wwwDir%/queue.json
	repetitiveCommandsFile:  %wwwDir%/repetitive.json
	periodicRun: '30 minutes'

php:
	date.timezone: Europe/Prague

application:
	errorPresenter: Error
	mapping:
		*: App\*Module\Presenters\*Presenter


session:
	expiration: 14 days

services:
	router: App\RouterFactory::createRouter
	- App\Model\AcceptanceTesterFactory
	- @App\Model\AcceptanceTesterFactory::getAcceptanceTester
	- App\Model\Game\GalaxyBrowser
	- App\Model\Game\SignManager(user: %user%, password: %password%)
	- App\Model\Game\UpgradeManager
	- App\Model\Game\BuildManager
	- App\Model\Queue\QueueConsumer
	- App\Model\ResourcesCalculator(acceleration: %acceleration%)
	- App\Model\Game\PlanetManager
	- App\Model\CronManager(%cronFile%)
	- App\Model\Queue\QueueManager
	- App\Model\Queue\QueueFileRepository(queueFile: %queueFile%, repetitiveCommandsFile: %repetitiveCommandsFile%)
	- App\Forms\FormFactory
	- App\Model\Game\Menu
	- {class: App\Presenters\DashboardPresenter, setup: {setCronFile(%cronFile%), setRunningFile(%runningFile%)}}
	- {implement: App\Components\IDisplayCommandFactory}
	- App\Model\DatabaseManager
	- App\Model\UpgradeStoragesPreProcessor
	- App\Model\Game\FleetManager
	- App\Model\PlayersProber
	- App\Model\Game\ReportReader
	- App\Model\AttackChecker
	- App\Model\PageObject\FleetInfo
	nette.latteFactory:
		setup:
			- addFilter(implodeAssoc, App\Filters\ImplodeAssoc::process)
	- App\Model\Logging\DoctrineMonologAdapter(types: [])
	- App\Forms\SendFleetCommandFormFactory
	- App\Forms\ScanGalaxyCommandFormFactory
	- App\Model\Queue\CommandDispatcher
	- App\Model\PlanetCalculator
	- App\Model\Prober
	- App\Model\FarmsProber
	- App\Model\FarmsAttacker

extensions:
	console: Kdyby\Console\DI\ConsoleExtension
	events: Kdyby\Events\DI\EventsExtension
	annotations: Kdyby\Annotations\DI\AnnotationsExtension
	doctrine: Kdyby\Doctrine\DI\OrmExtension
	monolog: Kdyby\Monolog\DI\MonologExtension
	nextrasForms: Nextras\Forms\DI\FormsExtension

monolog:
	hookToTracy: off
	name: serverLogger
	handlers:                                                                   #aby správně fungovaly handlery a braly pouze své události, musí být registrovány od nejnižšího po nejvyšší
		- Monolog\Handler\SlackHandler(%slackApiToken%, %slackChannel%, ogameBot, true, null, Monolog\Logger::ALERT, true)
		- Monolog\Handler\FingersCrossedHandler(
			Monolog\Handler\RotatingFileHandler(%appDir%/../log/bot.log, 30, Monolog\Logger::DEBUG),
			Monolog\Logger::DEBUG
		)

console:
	commands:
		- App\Commands\TestCommand
		- App\Commands\ProcessQueueCommand(periodicRun: %periodicRun%)

doctrine:
    types:
        carbondatetime: 		App\Model\Type\CarbonDateTimeType
        playerstatus:			App\Model\Type\PlayerStatusType
        probingstatus:			App\Model\Type\ProbingStatusType
        planetprobingstatus:	App\Model\Type\PlanetProbingStatusType